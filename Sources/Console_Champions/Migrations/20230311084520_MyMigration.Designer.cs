// <auto-generated />
using System;
using Console_Champions;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleChampions.Migrations
{
    [DbContext(typeof(StubbedContext))]
    [Migration("20230311084520_MyMigration")]
    partial class MyMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("ChampionEntityRunePageEntity", b =>
                {
                    b.Property<int>("ChampionsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RunePagesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChampionsId", "RunePagesId");

                    b.HasIndex("RunePagesId");

                    b.ToTable("ChampionEntityRunePageEntity");
                });

            modelBuilder.Entity("ChampionEntitySkillEntity", b =>
                {
                    b.Property<int>("ChampionsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChampionsId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("ChampionEntitySkillEntity");
                });

            modelBuilder.Entity("Console_Champions.ChampionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bio")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ChampionEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 1,
                            Name = "Akali"
                        },
                        new
                        {
                            Id = 2,
                            Class = 2,
                            Name = "Aatrox"
                        },
                        new
                        {
                            Id = 3,
                            Class = 3,
                            Name = "Ahri"
                        });
                });

            modelBuilder.Entity("Console_Champions.RuneEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Family")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RuneEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Conqueror"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Triumph"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Legend: Alacrity"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Legend: Tenacity"
                        },
                        new
                        {
                            Id = 5,
                            Name = "last stand"
                        },
                        new
                        {
                            Id = 6,
                            Name = "last stand 2"
                        });
                });

            modelBuilder.Entity("Console_Champions.RunePageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RunePageEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "RunePage1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "RunePage2"
                        });
                });

            modelBuilder.Entity("Console_Champions.SkillEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("SkillEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "FirePower",
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "MentalStrenght",
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "UltimEnd",
                            Type = 3
                        });
                });

            modelBuilder.Entity("Console_Champions.SkinEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("ForeignChampion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Icon")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<float?>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ForeignChampion");

                    b.ToTable("SkinEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ForeignChampion = 1,
                            Name = "Stinger"
                        },
                        new
                        {
                            Id = 2,
                            ForeignChampion = 1,
                            Name = "Infernal"
                        },
                        new
                        {
                            Id = 3,
                            ForeignChampion = 1,
                            Name = "All-Star"
                        },
                        new
                        {
                            Id = 4,
                            ForeignChampion = 2,
                            Name = "Justicar"
                        },
                        new
                        {
                            Id = 5,
                            ForeignChampion = 2,
                            Name = "Mecha"
                        },
                        new
                        {
                            Id = 6,
                            ForeignChampion = 2,
                            Name = "Sea Hunter"
                        },
                        new
                        {
                            Id = 7,
                            ForeignChampion = 3,
                            Name = "Dynasty"
                        },
                        new
                        {
                            Id = 8,
                            ForeignChampion = 3,
                            Name = "Midnight"
                        },
                        new
                        {
                            Id = 9,
                            ForeignChampion = 3,
                            Name = "Foxfire"
                        });
                });

            modelBuilder.Entity("RuneEntityRunePageEntity", b =>
                {
                    b.Property<int>("RunePagesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RunesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RunePagesId", "RunesId");

                    b.HasIndex("RunesId");

                    b.ToTable("RuneEntityRunePageEntity");
                });

            modelBuilder.Entity("ChampionEntityRunePageEntity", b =>
                {
                    b.HasOne("Console_Champions.ChampionEntity", null)
                        .WithMany()
                        .HasForeignKey("ChampionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Console_Champions.RunePageEntity", null)
                        .WithMany()
                        .HasForeignKey("RunePagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ChampionEntitySkillEntity", b =>
                {
                    b.HasOne("Console_Champions.ChampionEntity", null)
                        .WithMany()
                        .HasForeignKey("ChampionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Console_Champions.SkillEntity", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Console_Champions.SkinEntity", b =>
                {
                    b.HasOne("Console_Champions.ChampionEntity", "Champion")
                        .WithMany("Skins")
                        .HasForeignKey("ForeignChampion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Champion");
                });

            modelBuilder.Entity("RuneEntityRunePageEntity", b =>
                {
                    b.HasOne("Console_Champions.RunePageEntity", null)
                        .WithMany()
                        .HasForeignKey("RunePagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Console_Champions.RuneEntity", null)
                        .WithMany()
                        .HasForeignKey("RunesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Console_Champions.ChampionEntity", b =>
                {
                    b.Navigation("Skins");
                });
#pragma warning restore 612, 618
        }
    }
}
